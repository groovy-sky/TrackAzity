{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location":{
            "defaultValue": "[resourceGroup().location]",
            "type": "String"
        },
        "newVNetTemplate":{
            "defaultValue": "NewVNet",
            "type": "String"
        },
        "addIPTemplate":{
            "defaultValue": "AddIP",
            "type": "String"
        },
        "storageAccountName": {
            "defaultValue": "[concat('strg', uniqueString(resourceGroup().id))]" ,
            "type": "String"
        }
    },
    "variables": {
        "topicName":"[concat('topic',uniqueString(resourceGroup().id))]"        
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('storageAccountName')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": false,
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "table": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "queue": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccountName'), '/default/test')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 102400,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccountName'), '/default/azure')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccountName'), '/default/devops')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccountName'), '/default/errors')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccountName'), '/default/ips')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {}
        }
        ,{
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2024-06-01-preview",
            "name": "[variables('topicName')]",
            "location": "global",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "source": "[resourceGroup().id]",
                "topicType": "Microsoft.Resources.ResourceGroups"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2024-06-01-preview",
            "name": "[concat(variables('topicName'), '/deployments-and-peerings')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', variables('topicName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "destination": {
                    "properties": {
                        "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                        "queueName": "azure",
                        "queueMessageTimeToLiveInSeconds": -1
                    },
                    "endpointType": "StorageQueue"
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Resources.ResourceWriteSuccess",
                        "Microsoft.Resources.ResourceDeleteSuccess",
                        "Microsoft.Resources.ResourceActionSuccess"
                    ],
                    "enableAdvancedFilteringOnArrays": true,
                    "advancedFilters": [
                        {
                            "values": [
                                "/providers/Microsoft.Resources/deployments/",
                                "/providers/Microsoft.Network/virtualNetworks/"
                            ],
                            "operatorType": "StringContains",
                            "key": "subject"
                        }
                    ]
                },
                "labels": [],
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2022-02-01",
            "name": "[parameters('newVNetTemplate')]",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2022-02-01",
            "name": "[concat(parameters('newVNetTemplate'), '/v1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', parameters('newVNetTemplate'))]"
            ],
            "properties": {
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetSubscription": {
                            "type": "string"
                        },
                        "vnetResourceGroup": {
                            "type": "string"
                        },
                        "vnetSize": {
                            "type": "int",
                            "allowedValues": [
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29
                            ]
                        },
                        "location": {
                            "type": "string",
                            "defaultValue": "WestEurope",
                            "allowedValues": [
                                "WestEurope",
                                "NorthEurope",
                                "SwedenCentral"
                            ]
                        },
                        "deployTime": {
                            "type": "int",
                            "defaultValue": "[[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]"
                        }
                    },
                    "variables": {
                        "vnetId": "[[concat('/subscriptions/',parameters('vnetSubscription'),'/resourceGroups/',parameters('vnetResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'))]"
                    },
                    "resources": {},
                    "outputs": {
                        "deployName": {
                            "type": "string",
                            "value": "NewVNet"
                        },
                        "vnetId": {
                            "type": "string",
                            "value": "[[variables('vnetId')]"
                        },
                        "deployTime": {
                            "type": "int",
                            "value": "[[parameters('deployTime')]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2022-02-01",
            "name": "[parameters('addIPTemplate')]",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2022-02-01",
            "name": "[concat(parameters('addIPTemplate'), '/v1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', parameters('addIPTemplate'))]"
            ],
            "properties": {
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "NewIP": {
                            "type": "string"
                        },
                        "deployTime": {
                            "type": "int",
                            "defaultValue": "[[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]"
                        }
                    },
                    "resources": {},
                    "outputs": {
                        "deployName": {
                            "type": "string",
                            "value": "AddIP"
                        },
                        "NewIP": {
                            "type": "string",
                            "value": "[[parameters('NewIP')]"
                        },
                        "deployTime": {
                            "type": "int",
                            "value": "[[parameters('deployTime')]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "topicName": {
            "type": "string",
            "value": "[variables('topicName')]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[parameters('storageAccountName')]"
        }
    }
}